#***********************************************MATH TEST
#Drew Macklin worked alone for 45 mins
import random

'''This function takes no arguments and returns no variables. It requires that the user gets 10 more questions correct than they get incorrect.
I couldn't figure out how to make a random non-integer, so the type of question (addition vs subtraction vs multli vs division) isnt exactly 1:1:1:1.
It first generates a random integer between 0 and 10. If it is 0, 1, or 2 then it asks an addition question... etc for the other types. Then based on
the type of question, it generates two variables between 0 and 100 for addition and subtraction, or between 0 and 12 for multliplication and between 1 and 12
for division to avoid division by 0. It then prompts the user "what is (value of x) (plus, minus, times, divided by) (value of y)". It then takes an input and
converts it from a string to a float (division asks the user to round to 2 decimalplaces) or an integer and checks it against the computer's answer.
If they are the same then it says "correct" and adds 1 to the score and prints the score. If the user is incorrect then it says "sorry the correct answer is
(correct answer)" and then subracts one point and prints the new score. Once score equals 10 the computer prints "Task completed" and exits the program.'''

def question():
    score = 0
    while (score <= 10):
        if(random.randint(0,10) < 2.5):
            x = random.randint(0,100)
            stringx = str(x)
            y = random.randint(0,100)
            stringy = str(y)
            answer = input("What is " + stringx + " plus " + stringy + "?")
            if(int(answer) == x+y):
                    score+=1
                    scorecount = str(score)
                    print("correct, your score is " + scorecount)
            else:
                    score-=1
                    correct = str(x+y)
                    scorecount = str(score)
                    print("sorry the answer is " + correct + " your score is " + scorecount)
        elif(random.randint(0,10) < 5):
            x = random.randint(0,100)
            stringx = str(x)
            y = random.randint(0,100)
            stringy = str(y)
            answer = input("What is " + stringx + " minus " + stringy + "?")
            if (int(answer) == x-y):
                    score+=1
                    scorecount = str(score)
                    print("correct, your score is " + scorecount)
            else:
                    score-=1
                    correct = str(x-y)
                    scorecount = str(score)
                    print("sorry the answer is " + correct + " your score is " + scorecount)
        elif(random.randint(0,10) < 7.5):
            x = random.randint(0,10)
            stringx = str(x)
            y = random.randint(0,10)
            stringy = str(y)
            answer = input("What is " + stringx + " times " + stringy + "?")
            if (int(answer) == x*y):
                    score+=1
                    scorecount = str(score)
                    print("correct, your score is " + scorecount)
            else:
                    score-=1
                    correct = str(x*y)
                    scorecount = str(score)
                    print("sorry the answer is " + correct + " your score is " + scorecount)
        else:
            x = random.randint(0,10)
            stringx = str(x)
            y = random.randint(1,10)
            stringy = str(y)
            answer = input("What is " + stringx + " divided by " + stringy + "? Round to two decimal places")
            if (float(answer) == float(round(x/y,2))):
                    score+=1
                    scorecount = str(score)
                    print("correct, your score is " + scorecount)
            else:
                    score-=1
                    correct = str(round((x/y),2))
                    scorecount = str(score)
                    print("sorry the answer is " + correct + " your score is " + scorecount)
    print("Task completed")
question()


#***********************************************Bubble Level
import microbit

'''
Drew Macklin worked alone for 15 mins to make the functional code then worked for another hour on the code that still doesn't work.

Flowchart Idea without being able to draw a flowchart:
If the acceleration in the negative y direction is less than negative 50 then the front edge of the microbit is facing down so
the bubble would appear at the bottom edge of the microbit (y=4). If the acceleration is still negative but less so then the bubble
would me more centered but still be on the bottom edge (y=3). If the acceleration is between -15 mg and 15 mg then the microbit is
level in the y direction. If the acceleration is between 15 and 50 mg then the bottom edge is down and the bubble will rise to the
front edge (y=1) if th acceleration is over 50 mg in the y direction then the bubble will be at the top of the microbit (y=0).
I did the same thing for the x direction (x = ?). I wrote two functions that returned these values, then had a draw function that called them
and used them to draw that pixel, then pause for .1 seconds before turning it off and lighting up new pixel if the acceleration changed.
Unfortunately I couldn't get the draw function to take functions as arguments so I just wrote the draw function in the same function that
found the x and y coordinates. I then put this function in an infinite loop so that it will keep working until I stop the program. I kept
the code that didn't work in hopes of partial credit :) or an explanation for what I did wrong'''

'''import math

def find_tilt_x(ax,ay,az):
    return math.atan(ax/az)

def find_tilt_y(ax,ay,az):
    return math.atan(ay/az)

def xpixel():
    x = microbit.accelerometer.get_x()
    xpixel = 0
    if(x<-50):
        xpixel = 4
        return xpixel
    elif(x<-15):
        xpixel = 3
        return xpixel
    elif(x<15):
        xpixel = 2
        return xpixel
    elif(x<50):
        xpixel = 1
        return xpixel
    elif(x>=50):
        xpixel = 0
        return xpixel

def ypixel():
    y = microbit.accelerometer.get_y()
    ypixel = 0
    if(y<-50):
        ypixel = 4
        return ypixel
    elif(y<-15):
        ypixel = 3
        return ypixel
    elif(y<15):
        ypixel = 2
        return ypixel
    elif(y<50):
        ypixel = 1
        return ypixel
    elif(y>=50):
        ypixel = 0
        return ypixel

def draw_bubble_disfunctional(x,y)
    microbit.display.set_pixel(x,y,9)
    microbit.sleep(100)
    microbit.display.set_pixel(x,y,0)

while True:
    draw_bubble_disfunctional(xpixel(),ypixel())'''

def draw_bubble():
    x = microbit.accelerometer.get_x()
    xpixel = 0
    if(x<-50):
        xpixel = 4
    elif(x<-15):
        xpixel = 3
    elif(x<15):
        xpixel = 2
    elif(x<50):
        xpixel = 1
    elif(x>=50):
        xpixel = 0

    y = microbit.accelerometer.get_y()
    ypixel = 0
    if(y<-50):
        ypixel = 4
    elif(y<-15):
        ypixel = 3
    elif(y<15):
        ypixel = 2
    elif(y<50):
        ypixel = 1
    elif(y>=50):
        ypixel = 0

    microbit.display.set_pixel(xpixel,ypixel,9)
    microbit.sleep(100)
    microbit.display.set_pixel(xpixel,ypixel,0)

while True:
    draw_bubble()
    
    
    
    
    
    #**************************Floating number
# YOUR NAME: Drew Macklin
# NUMBER OF HOURS TO COMPLETE:  <1 min
# YOUR COLLABORATION STATEMENT(s): Alone
import math

def almost_equal(A, B):
    if(abs(A-B)<=10**-9):return True
    else:return False
print("This should be 'True', but floating point error make it 'False': ", .1+.1+.1 == .3)
print("Our almost_equal function returns the correct result: ", almost_equal(.1+.1+.1,.3))
